### **Explication du Code HTML du Formulaire Client** üìù

Ce code HTML met en place un **formulaire de saisie des informations d'un client**. Il utilise diff√©rentes **balises HTML** pour organiser les champs et permettre l'interaction utilisateur.

---

## **üìå Structure G√©n√©rale**
- **`<form>`** : Contient le formulaire complet.
- **`<fieldset>`** : Groupe les champs du formulaire avec une bordure.
- **`<legend>`** : Donne un titre au `fieldset` (ici : "Client").
- **`<table>`** : Organise les champs sous forme de tableau pour une meilleure pr√©sentation.

---

## **üìå Explication Ligne par Ligne**

### **1Ô∏è‚É£ En-t√™te et Liaison CSS**
```html
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formulaire Client</title>
    <link rel="stylesheet" href="style.css"> <!-- Fichier CSS s√©par√© -->
</head>
```
- **D√©finit l'encodage** (`UTF-8`) pour afficher correctement les caract√®res sp√©ciaux.
- **Ajoute la compatibilit√© mobile** (`viewport`).
- **Lien vers un fichier CSS externe** (`style.css`) pour la mise en page.

---

### **2Ô∏è‚É£ Civilit√© (Monsieur, Madame, Mademoiselle)**
```html
<td width="17%"><b>Civilit√©</b></td>
<td width="45%">
    <input type="radio" name="civilite" value="mademoiselle">Mademoiselle
    <input type="radio" name="civilite" value="madame" checked>Madame
    <input type="radio" name="civilite" value="monsieur">Monsieur
</td>
```
- **`input type="radio"`** : Permet de s√©lectionner **une seule option** √† la fois.
- **L'attribut `checked`** : D√©finit "Madame" comme valeur par d√©faut.

---

### **3Ô∏è‚É£ Nom et Pr√©nom**
```html
<td><b>Nom / Pr√©nom</b></td>
<td><input id="c1" type="text" name="nom" size="50" maxlength="80"></td>
<td id="t2"></td>
```
- **Champ texte (`input type="text"`)** : Permet de saisir un **nom et pr√©nom**.
- **Attributs** :
  - `size="50"` ‚Üí Largeur du champ.
  - `maxlength="80"` ‚Üí Limite la saisie √† **80 caract√®res**.

---

### **4Ô∏è‚É£ Adresse**
```html
<td><b>Adresse</b></td>
<td><textarea id="c2" name="adresse" cols="50" rows="2"></textarea></td>
<td id="t3"></td>
```
- **Champ `textarea`** pour une adresse avec plusieurs lignes.
- **Attributs** :
  - `cols="50"` ‚Üí Largeur.
  - `rows="2"` ‚Üí Hauteur.

---

### **5Ô∏è‚É£ Code Postal et Localit√©**
```html
<td><b>No Postal / Localit√©</b></td>
<td>
    <input id="c3" type="text" name="no_postal" size="5" maxlength="4">
    <input id="c4" type="text" name="localite" size="20" maxlength="80">
</td>
<td id="t4"></td>
```
- **Champ "Code Postal"** limit√© √† **4 caract√®res**.
- **Champ "Localit√©"** pour la ville.

---

### **6Ô∏è‚É£ S√©lection du Pays et Ajout Dynamique**
```html
<td><b>Pays</b></td>
<td>
    <select id="lepays" name="pays">
        <option>Tunisie</option>
        <option>Alg√©rie</option>
        <option selected>Maroc</option>
    </select>
    <b>Ajouter pays</b>
    <input id="c5" type="text" name="monpays" size="20" maxlength="80" value="Libye">
    <button type="button">Ajouter Pays</button>
</td>
```
- **Liste d√©roulante `<select>`** contenant des pays.
- **L'option "Maroc" est s√©lectionn√©e par d√©faut** (`selected`).
- **Ajout d'un pays** via un **champ texte** et un **bouton**.

‚ÑπÔ∏è *Une fonction JavaScript doit √™tre ajout√©e pour permettre l'ajout dynamique d'un pays sans doublon*.

---

### **7Ô∏è‚É£ S√©lection des Plateformes Utilis√©es**
```html
<td><b>Plateforme(s)</b></td>
<td>
    <input type="checkbox" name="materiel" value="windows" checked>Windows
    <input type="checkbox" name="materiel" value="mac" checked>Macintosh
    <input type="checkbox" name="materiel" value="unix">Unix
</td>
```
- **`input type="checkbox"`** : Permet de s√©lectionner plusieurs options.
- **"Windows" et "Mac" sont coch√©s par d√©faut** (`checked`).

---

### **8Ô∏è‚É£ S√©lection des Applications**
```html
<td><b>Application(s)</b></td>
<td>
    <select name="applications" size="5" multiple>
        <option selected>Bureautique</option>
        <option>DAO</option>
        <option>Statistiques</option>
        <option>SGBD</option>
        <option selected>Internet</option>
    </select>
</td>
```
- **Liste d√©roulante avec plusieurs s√©lections possibles** (`multiple`).
- **Les options "Bureautique" et "Internet" sont s√©lectionn√©es par d√©faut** (`selected`).

---

### **9Ô∏è‚É£ Boutons de Soumission**
```html
<center>
    <table border="0" cellspacing="0" cellpadding="10" width="95%">
        <tr>
            <th>
                <input type="button" value="Soumettre Formulaire">
                <input type="button" value="V√©rification Formulaire">
                <input type="reset" value="Effacer">
            </th>
        </tr>
    </table>
</center>
```
- **Bouton "Soumettre Formulaire"** : Enverra les donn√©es (n√©cessite JavaScript pour fonctionner).
- **Bouton "V√©rification Formulaire"** : Peut √™tre utilis√© pour v√©rifier la saisie des champs.
- **Bouton "Effacer"** (`reset`) : R√©initialise tous les champs.

---

## **‚úÖ R√©sum√© des Am√©liorations Possibles**
1. **Ajouter un fichier CSS (`style.css`)** pour am√©liorer la mise en page.
2. **Ajouter un script JavaScript** pour :
   - V√©rifier les champs obligatoires avant soumission.
   - Ajouter un pays dynamiquement sans doublon.
3. **Remplacer les boutons `<input type="button">` par `<button>`** pour une meilleure accessibilit√©.

---

üí° **Besoin d'aide pour le JavaScript ?** Je peux t‚Äôaider √† ajouter la **v√©rification des champs**, l‚Äô**ajout dynamique du pays**, et l‚Äô**affichage des donn√©es** ! üöÄ
Explication des Fonctions
1Ô∏è‚É£ AjouterPays()
R√©cup√®re la valeur saisie dans "ajouter pays".
V√©rifie que le champ n'est pas vide.
V√©rifie que le pays n'est pas d√©j√† pr√©sent dans la liste.
Ajoute le pays si ce n'est pas un doublon.
2Ô∏è‚É£ afficher()
R√©cup√®re et affiche toutes les informations du formulaire sous forme de r√©sum√©.
Prend en compte :
La civilit√© choisie.
Le nom et l‚Äôadresse.
Le pays s√©lectionn√©.
Les plateformes et applications coch√©es.
Affiche un r√©sum√© sous forme de alert().
3Ô∏è‚É£ forme()
V√©rifie que tous les champs obligatoires sont remplis.
V√©rifie que le code postal est un nombre √† 4 chiffres.
Affiche une alerte en cas d'erreur.
üñ•Ô∏è Mise √† Jour de ton HTML :
Dans ton fichier HTML, ajoute cette ligne dans <head> pour lier ton script :

 ### **Explication du code JavaScript**

Ce script **g√®re un formulaire interactif** avec les fonctionnalit√©s suivantes :
1. **Ajout dynamique de pays** dans une liste d√©roulante.
2. **Validation du formulaire** avec messages d‚Äôerreur.
3. **Affichage des informations saisies**.
4. **Enregistrement et r√©cup√©ration des donn√©es** avec **Local Storage**.

---

## **1Ô∏è‚É£ Initialisation du script**  
```javascript
document.addEventListener("DOMContentLoaded", function () {
    document.querySelector("#ajouterPays").addEventListener("click", AjouterPays);
    document.querySelector("#verifierForm").addEventListener("click", VerifierFormulaire);
    document.querySelector("#soumettreForm").addEventListener("click", AfficherAlert);
    document.querySelector("#enregistrer").addEventListener("click", EnregistrerLocalStorage);
    document.querySelector("#recuperer").addEventListener("click", RecupererLocalStorage);
});
```
- **`DOMContentLoaded`** : Attendre que la page soit enti√®rement charg√©e avant d‚Äôex√©cuter le script.
- **Ajout d‚Äô√©couteurs d‚Äô√©v√©nements (`addEventListener`)** :
  - üìå **Bouton "Ajouter Pays"** ‚Üí Fonction `AjouterPays()`
  - üìå **Bouton "V√©rifier Formulaire"** ‚Üí Fonction `VerifierFormulaire()`
  - üìå **Bouton "Soumettre Formulaire"** ‚Üí Fonction `AfficherAlert()`
  - üìå **Bouton "Enregistrer"** ‚Üí Fonction `EnregistrerLocalStorage()`
  - üìå **Bouton "R√©cup√©rer"** ‚Üí Fonction `RecupererLocalStorage()`

---

## **2Ô∏è‚É£ Ajouter un pays sans doublon**
```javascript
function AjouterPays() {
    let select = document.getElementById("lepays");
    let input = document.getElementById("c5").value.trim();

    if (input === "") {
        alert("Veuillez entrer un nom de pays !");
        return;
    }

    let exists = Array.from(select.options).some(option => option.text.toLowerCase() === input.toLowerCase());

    if (!exists) {
        let newOption = document.createElement("option");
        newOption.text = input;
        select.add(newOption);
        alert("Pays ajout√© avec succ√®s !");
    } else {
        alert("Ce pays est d√©j√† dans la liste !");
    }

    document.getElementById("c5").value = "";
}
```
- **R√©cup√®re le champ du pays (`c5`)** et la liste d√©roulante (`lepays`).
- **V√©rifie si le champ est vide** ‚Üí Affiche une alerte.
- **V√©rifie si le pays est d√©j√† pr√©sent dans la liste**.
- **Ajoute un pays uniquement s'il n'existe pas d√©j√†**.

---

## **3Ô∏è‚É£ Validation du formulaire**
```javascript
function VerifierFormulaire() {
    let nom = document.getElementById("c1");
    let adresse = document.getElementById("c2");
    let codePostal = document.getElementById("c3");
    let localite = document.getElementById("c4");

    let erreurs = [];

    // V√©rification du nom et pr√©nom
    if (nom.value.length < 8 || nom.value.length > 20) {
        erreurs.push("Le champ 'Nom / Pr√©nom' doit contenir entre 8 et 20 caract√®res.");
        nom.style.color = "red";
    } else {
        nom.style.color = "black";
    }

    // V√©rification de l'adresse
    if (adresse.value.length < 20) {
        erreurs.push("L'adresse doit contenir au moins 20 caract√®res.");
        adresse.style.color = "red";
    } else {
        adresse.style.color = "black";
    }

    // V√©rification du code postal (doit √™tre 3000 ou 4000)
    if (codePostal.value !== "3000" && codePostal.value !== "4000") {
        erreurs.push("Le No Postal doit √™tre 3000 ou 4000.");
        codePostal.style.color = "red";
    } else {
        codePostal.style.color = "black";
        localite.value = (codePostal.value === "3000") ? "Ville 1" : "Ville 2";
    }

    // Affichage des erreurs ou succ√®s
    if (erreurs.length > 0) {
        alert("‚ùå Erreurs trouv√©es : \n\n" + erreurs.join("\n"));
    } else {
        alert("‚úÖ Le formulaire est correct !");
    }
}
```
- **V√©rifie chaque champ et applique des r√®gles de validation** :
  - üî¥ **Nom** : entre **8 et 20 caract√®res**.
  - üî¥ **Adresse** : au moins **20 caract√®res**.
  - üî¥ **Code postal** : **3000 ou 4000** seulement.
- **Modifie la couleur du texte en rouge** si le champ est invalide.
- **Affiche une alerte** en cas d‚Äôerreur.

---

## **4Ô∏è‚É£ Affichage des informations**
```javascript
function AfficherAlert() {
    let nom = document.getElementById("c1").value.trim();
    let adresse = document.getElementById("c2").value.trim();
    let codePostal = document.getElementById("c3").value.trim();
    let localite = document.getElementById("c4").value.trim();
    let pays = document.getElementById("lepays").value;

    let erreurs = [];

    // V√©rification des erreurs avant affichage
    if (nom.length < 8 || nom.length > 20) erreurs.push("Nom invalide !");
    if (adresse.length < 20) erreurs.push("Adresse invalide !");
    if (codePostal !== "3000" && codePostal !== "4000") erreurs.push("Code postal invalide !");

    if (erreurs.length > 0) {
        alert("‚ùå Veuillez corriger les erreurs avant de soumettre.\n\n" + erreurs.join("\n"));
    } else {
        alert(`üìã Donn√©es saisies :
        Nom: ${nom}
        Adresse: ${adresse}
        Code Postal: ${codePostal}
        Localit√©: ${localite}
        Pays: ${pays}`);
    }
}
```
- **V√©rifie les erreurs avant d'afficher les donn√©es.**
- **Affiche un r√©sum√©** des donn√©es si elles sont correctes.

---

## **5Ô∏è‚É£ Enregistrer les donn√©es dans Local Storage**
```javascript
function EnregistrerLocalStorage() {
    let nom = document.getElementById("c1").value.trim();
    let adresse = document.getElementById("c2").value.trim();
    let codePostal = document.getElementById("c3").value.trim();
    let localite = document.getElementById("c4").value.trim();
    let pays = document.getElementById("lepays").value;

    if (!nom || !adresse || !codePostal) {
        alert("‚ùå Veuillez remplir correctement le formulaire avant d'enregistrer !");
        return;
    }

    let data = { nom, adresse, codePostal, localite, pays };

    localStorage.setItem("formData", JSON.stringify(data));
    alert("‚úÖ Donn√©es enregistr√©es avec succ√®s !");
}
```
- **V√©rifie que les champs sont remplis.**
- **Enregistre les donn√©es dans `localStorage`.**

---

## **6Ô∏è‚É£ R√©cup√©rer les donn√©es depuis Local Storage**
```javascript
function RecupererLocalStorage() {
    let data = localStorage.getItem("formData");

    if (data) {
        let formData = JSON.parse(data);

        document.getElementById("c1").value = formData.nom;
        document.getElementById("c2").value = formData.adresse;
        document.getElementById("c3").value = formData.codePostal;
        document.getElementById("c4").value = formData.localite;
        document.getElementById("lepays").value = formData.pays;

        alert("‚úÖ Donn√©es r√©cup√©r√©es avec succ√®s !");
    } else {
        alert("‚ùå Aucune donn√©e enregistr√©e !");
    }
}
```
- **Charge les donn√©es enregistr√©es dans le formulaire.**
- **Affiche une alerte si aucune donn√©e n‚Äôest disponible.**

---

## **üåü R√©sum√© des Fonctionnalit√©s**
‚úÖ **Ajout dynamique de pays** (sans doublon).  
‚úÖ **Validation du formulaire** avec erreurs visuelles.  
‚úÖ **Affichage des donn√©es saisies** avec `alert()`.  
‚úÖ **Enregistrement des donn√©es** dans Local Storage.  
‚úÖ **R√©cup√©ration des donn√©es** enregistr√©es.  

üí° **Avec ce script, ton formulaire est maintenant enti√®rement interactif et fonctionnel !** üöÄ





script
document.addEventListener("DOMContentLoaded", function () {
    document.querySelector("#ajouterPays").addEventListener("click", AjouterPays);
    document.querySelector("#verifierForm").addEventListener("click", VerifierFormulaire);
    document.querySelector("#soumettreForm").addEventListener("click", AfficherAlert);
    document.querySelector("#enregistrer").addEventListener("click", EnregistrerLocalStorage);
    document.querySelector("#recuperer").addEventListener("click", RecupererLocalStorage);
});

// Fonction pour ajouter un pays sans doublon
  
function AjouterPays() {
    let select = document.getElementById("lepays");
    let input = document.getElementById("c5").value.trim();

    if (input === "") {
        alert("Veuillez entrer un nom de pays !");
        return;
    }

    let exists = Array.from(select.options).some(option => option.text.toLowerCase() === input.toLowerCase());

    if (!exists) {
        let newOption = document.createElement("option");
        newOption.text = input;
        select.add(newOption);
        alert("Pays ajout√© avec succ√®s !");
    } else {
        alert("Ce pays est d√©j√† dans la liste !");
    }

    document.getElementById("c5").value = "";
}

  //Fonction pour valider le formulaire et afficher les erreurs
 
function VerifierFormulaire() {
    let nom = document.getElementById("c1");
    let adresse = document.getElementById("c2");
    let codePostal = document.getElementById("c3");
    let localite = document.getElementById("c4");

    let erreurs = [];

    // V√©rifier nom et pr√©nom (entre 8 et 20 caract√®res)
    if (nom.value.length < 8 || nom.value.length > 20) {
        erreurs.push("Le champ 'Nom / Pr√©nom' doit contenir entre 8 et 20 caract√®res.");
        nom.style.color = "red";
    } else {
        nom.style.color = "black";
    }

    // V√©rifier adresse (min 20 caract√®res)
    if (adresse.value.length < 20) {
        erreurs.push("L'adresse doit contenir au moins 20 caract√®res.");
        adresse.style.color = "red";
    } else {
        adresse.style.color = "black";
    }

    // V√©rifier No Postal (doit √™tre 3000 ou 4000)
    if (codePostal.value !== "3000" && codePostal.value !== "4000") {
        erreurs.push("Le No Postal doit √™tre 3000 ou 4000.");
        codePostal.style.color = "red";
    } else {
        codePostal.style.color = "black";
        localite.value = (codePostal.value === "3000") ? "Ville 1" : "Ville 2";
    }

    // Affichage des erreurs ou succ√®s
    if (erreurs.length > 0) {
        alert("  Erreurs trouv√©es : \n\n" + erreurs.join("\n"));
    } else {
        alert("  Le formulaire est correct !");
    }
}

 // Fonction pour afficher une alerte avec les informations saisies
  
function AfficherAlert() {
    let nom = document.getElementById("c1").value.trim();
    let adresse = document.getElementById("c2").value.trim();
    let codePostal = document.getElementById("c3").value.trim();
    let localite = document.getElementById("c4").value.trim();
    let pays = document.getElementById("lepays").value;

    let erreurs = [];

    // V√©rification des erreurs avant affichage
    if (nom.length < 8 || nom.length > 20) erreurs.push("Nom invalide !");
    if (adresse.length < 20) erreurs.push("Adresse invalide !");
    if (codePostal !== "3000" && codePostal !== "4000") erreurs.push("Code postal invalide !");

    if (erreurs.length > 0) {
        alert("  Veuillez corriger les erreurs avant de soumettre.\n\n" + erreurs.join("\n"));
    } else {
        alert(`  Donn√©es saisies :
        Nom: ${nom}
        Adresse: ${adresse}
        Code Postal: ${codePostal}
        Localit√©: ${localite}
        Pays: ${pays}`);
    }
}

 // Fonction pour enregistrer les donn√©es dans le Local Storage
  
function EnregistrerLocalStorage() {
    let nom = document.getElementById("c1").value.trim();
    let adresse = document.getElementById("c2").value.trim();
    let codePostal = document.getElementById("c3").value.trim();
    let localite = document.getElementById("c4").value.trim();
    let pays = document.getElementById("lepays").value;

    if (!nom || !adresse || !codePostal) {
        alert("  Veuillez remplir correctement le formulaire avant d'enregistrer !");
        return;
    }

    let data = {
        nom, adresse, codePostal, localite, pays
    };

    localStorage.setItem("formData", JSON.stringify(data));
    alert("  Donn√©es enregistr√©es avec succ√®s !");
}

//   Fonction pour r√©cup√©rer les donn√©es enregistr√©es
 
function RecupererLocalStorage() {
    let data = localStorage.getItem("formData");

    if (data) {
        let formData = JSON.parse(data);

        document.getElementById("c1").value = formData.nom;
        document.getElementById("c2").value = formData.adresse;
        document.getElementById("c3").value = formData.codePostal;
        document.getElementById("c4").value = formData.localite;
        document.getElementById("lepays").value = formData.pays;

        alert("  Donn√©es r√©cup√©r√©es avec succ√®s !");
    } else {
        alert("  Aucune donn√©e enregistr√©e !");
    }
}
